Многопоточное программирование.
Особенность многопоточной программы заключатется в том, что она может состоять из нескольких частей, каждая из которых выполняет свою часть поставленной задачи, таким образом части выполняются паралельно и это часть программы называется потоком. Многопоточность ориентирована на потоки и процессы. 
Одним словом Многопоточность - это паралельное выполнение.

Асинхронное программирование.
Асинхронность - это логическая оптимизация выполнения, которая может работать
в одном и во многих потоках. Благодаря Асинхронности некоторые задачи можно вынести из основного потока в асинхронные методы.
В загаловке метода используем модификатор async
Метод содержит выражение await.
В качестве возвращаемого типа используется :
-void;
-Task;
-Task<T>;
-ValueTask<T>.

Параллельное программирование.
Паралельное программирование это техника в программирования который использует преимущества многопроцессорных компьютеров и в котором будет работать.
Существует два типа параллелизма: задач и данных и TPL поддерживает их оба.
Библиотека TPL упращает содание и применение многих потоков и TPL позволяет автоматически использовать несколько процессов.
Параллелизм на основе задач позволяет внутри одного и того же приложения паралельно(одновременно)  выполнять несколько методов.
А Параллелизм данных - это одна общая задача разбивается на подзадачи и каждая подзадача реализуется с помощью отдельного Task'a .
Класс Task является одним из основных компонентов параллельного программирования в C#.
